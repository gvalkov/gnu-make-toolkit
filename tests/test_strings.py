def test_seq(make):
    assert make('$(call seq,abc,abc)') == '#t'
    assert make('$(call seq,x,)') == ''
    assert make('$(call seq,,x)') == ''
    assert make('$(call seq,x,x)') == '#t'
    assert make('$(call seq,a%c,abc)') == ''
    assert make('$(call seq,abc,a%c)') == ''
    assert make('$(call seq,abc,ABC)') == ''
    assert make('$(call seq,abc)') == ''
    assert make('$(call seq,,)') == '#t'
    assert make('$(call seq,a b c,a b c)') == '#t'
    assert make('$(call seq,aa% bb% cc,aa% bb% cc)') == '#t'
    assert make('$(call seq,aa% bb% cc,aa% bb cc)') == ''
    assert make('$(call seq,aa% bb% cc,xx yy zz)') == ''
    assert make('$(call seq,x x)') == ''
    assert make('$(call seq, xx x,x xx)') == ''
    assert make('$(call seq, , )') == '#t'
    assert make('$(call seq,, )') == ''
    assert make('$(call seq, ,)') == ''
    assert make('$(call seq,y,xy)') == ''
    assert make('$(call seq,$(__space),$(__tab))') == ''

def test_sne(make):
    assert make('$(call sne,abc,abc)') == ''
    assert make('$(call sne,x,)') == '#t'
    assert make('$(call sne,,x)') == '#t'
    assert make('$(call sne,x,x)') == ''
    assert make('$(call sne,abc,ABC)') == '#t'
    assert make('$(call sne,abc,)') == '#t'
    assert make('$(call sne,,)') == ''
    assert make('$(call sne,a b c,a b c)') == ''
    assert make('$(call sne,aa% bb% cc,aa% bb% cc)') == ''
    assert make('$(call sne,aa% bb% cc,aa% bb cc)') == '#t'

def test_strlen(make):
    assert make('$(call strlen,)') == '0'
    assert make('$(call strlen,a)') == '1'
    assert make('$(call strlen,a b)') == '3'
    assert make('$(call strlen,a )') == '2'
    assert make('$(call strlen, a)') == '2'
    assert make('$(call strlen,  )') == '2'
    assert make('$(call strlen,   )') == '3'
    assert make('$(call strlen,    )') == '4'

def test_substr(make):
    assert make('$(call substr,xyz,0,1)') == 'x'
    assert make('$(call substr,xyz,1,2)') == 'y'
    assert make('$(call substr,xyz,1,3)') == 'yz'
    assert make('$(call substr,some string,0,1)') == 's'
    assert make('$(call substr,some string,0,2)') == 'so'
    assert make('$(call substr,some string,0,3)') == 'som'
    assert make('$(call substr,some string,0,4)') == 'some'
    assert make('$(call substr,some string,0,5)') == 'some '
    assert make('$(call substr,some string,0,6)') == 'some s'
    assert make('$(call substr,some string,5,5)') == ''
    assert make('$(call substr,some string,5,6)') == 's'
    assert make('$(call substr,some string,5,7)') == 'st'
    assert make('$(call substr,some string,5,8)') == 'str'
    assert make('$(call substr,some string,1,)') == 'ome string'

def test_string_join(make):
    assert make('$(call string-join,!,list of things)') == 'list!of!things'
    assert make('$(call string-join,$$V,list of things)') == 'list$Vof$Vthings'
    assert make('$(call string-join,*,list of things)') == 'list*of*things'
    assert make('$(call string-join,*,list)') == 'list'
    assert make('$(call string-join,*,)') == ''

def test_string_upcase(make):
    assert make('$(call string-upcase,The Quick Brown Fox)') == 'THE QUICK BROWN FOX'
    assert make('$(call string-upcase,the1 quick2 brown3 fox4)') == 'THE1 QUICK2 BROWN3 FOX4'
    assert make('$(call string-upcase,The_)') == 'THE_'
    assert make('$(call string-upcase,)') == ''

def test_string_downcase(make):
    assert make('$(call string-downcase,The Quick Brown Fox)') == 'the quick brown fox'
    assert make('$(call string-downcase,the1 quick2 brown3 fox4)') == 'the1 quick2 brown3 fox4'
    assert make('$(call string-downcase,The_)') == 'the_'
    assert make('$(call string-downcase,)') == ''
